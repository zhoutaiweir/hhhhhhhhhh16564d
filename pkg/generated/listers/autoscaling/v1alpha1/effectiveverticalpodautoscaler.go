// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gocrane/api/autoscaling/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EffectiveVerticalPodAutoscalerLister helps list EffectiveVerticalPodAutoscalers.
// All objects returned here must be treated as read-only.
type EffectiveVerticalPodAutoscalerLister interface {
	// List lists all EffectiveVerticalPodAutoscalers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EffectiveVerticalPodAutoscaler, err error)
	// EffectiveVerticalPodAutoscalers returns an object that can list and get EffectiveVerticalPodAutoscalers.
	EffectiveVerticalPodAutoscalers(namespace string) EffectiveVerticalPodAutoscalerNamespaceLister
	EffectiveVerticalPodAutoscalerListerExpansion
}

// effectiveVerticalPodAutoscalerLister implements the EffectiveVerticalPodAutoscalerLister interface.
type effectiveVerticalPodAutoscalerLister struct {
	indexer cache.Indexer
}

// NewEffectiveVerticalPodAutoscalerLister returns a new EffectiveVerticalPodAutoscalerLister.
func NewEffectiveVerticalPodAutoscalerLister(indexer cache.Indexer) EffectiveVerticalPodAutoscalerLister {
	return &effectiveVerticalPodAutoscalerLister{indexer: indexer}
}

// List lists all EffectiveVerticalPodAutoscalers in the indexer.
func (s *effectiveVerticalPodAutoscalerLister) List(selector labels.Selector) (ret []*v1alpha1.EffectiveVerticalPodAutoscaler, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EffectiveVerticalPodAutoscaler))
	})
	return ret, err
}

// EffectiveVerticalPodAutoscalers returns an object that can list and get EffectiveVerticalPodAutoscalers.
func (s *effectiveVerticalPodAutoscalerLister) EffectiveVerticalPodAutoscalers(namespace string) EffectiveVerticalPodAutoscalerNamespaceLister {
	return effectiveVerticalPodAutoscalerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EffectiveVerticalPodAutoscalerNamespaceLister helps list and get EffectiveVerticalPodAutoscalers.
// All objects returned here must be treated as read-only.
type EffectiveVerticalPodAutoscalerNamespaceLister interface {
	// List lists all EffectiveVerticalPodAutoscalers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EffectiveVerticalPodAutoscaler, err error)
	// Get retrieves the EffectiveVerticalPodAutoscaler from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EffectiveVerticalPodAutoscaler, error)
	EffectiveVerticalPodAutoscalerNamespaceListerExpansion
}

// effectiveVerticalPodAutoscalerNamespaceLister implements the EffectiveVerticalPodAutoscalerNamespaceLister
// interface.
type effectiveVerticalPodAutoscalerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EffectiveVerticalPodAutoscalers in the indexer for a given namespace.
func (s effectiveVerticalPodAutoscalerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EffectiveVerticalPodAutoscaler, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EffectiveVerticalPodAutoscaler))
	})
	return ret, err
}

// Get retrieves the EffectiveVerticalPodAutoscaler from the indexer for a given namespace and name.
func (s effectiveVerticalPodAutoscalerNamespaceLister) Get(name string) (*v1alpha1.EffectiveVerticalPodAutoscaler, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("effectiveverticalpodautoscaler"), name)
	}
	return obj.(*v1alpha1.EffectiveVerticalPodAutoscaler), nil
}
